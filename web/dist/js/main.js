!function(){"use strict";$("#form-signup").on("afterValidateAttribute",(function(t,a,s,n){return"password_repeat"===a.name&&$("#signupform-password").trigger("blur"),!0})),$(".kanban-board").length&&function t(){const a=$("[data-status='todo'] .task").length+$("[data-status='ready'] .task").length+$("[data-status='in_progress'] .task").length,s=$("[data-status='done'] .task").length;$("#activeTasks").text("Active tasks: ".concat(a)),$("#finishedTasks").text("Finished tasks: ".concat(s)),$(".task-menu").on("click",".btn-del-task",(function(){const a=$(this).closest(".task").data("id");$.post("/task/delete/",{taskId:a},(function(a){$("#kanban-board").html(a),t()}))})),$(".task-menu").on("click",".btn-move",(function(){const a=$(this).closest(".task").data("id"),s=$(this).data("dest");$.post("/task/update-status/",{taskId:a,status:s},(function(a){$("#kanban-board").html(a),t()}))})),$(".task").on("dragstart",(function(t){t.originalEvent.dataTransfer.setData("task-id",$(this).data("id"))})),$(".kanban-column").on("dragover",(function(t){t.preventDefault()})),$(".kanban-column").on("drop",(function(a){a.preventDefault();const s=a.originalEvent.dataTransfer.getData("task-id"),n=$(this).data("status");$.post("/task/update-status/",{taskId:s,status:n},(function(a){$("#kanban-board").html(a),t()}))}))}()}();
//# sourceMappingURL=main.js.map