{"version":3,"file":"yii.js","mappings":";yBA2CAA,OAAOC,IAAO,SAAUC,GACpB,IAAIC,EAAM,CAUNC,kBAAmB,GAInBC,kBAAmB,kGAKnBC,mBAAoB,0BAKpBC,aAAc,WACV,OAAOL,EAAE,yBAAyBM,KAAK,UAC3C,EAKAC,aAAc,WACV,OAAOP,EAAE,yBAAyBM,KAAK,UAC3C,EAQAE,aAAc,SAAUC,EAAMC,GAC1BV,EAAE,yBAAyBM,KAAK,UAAWG,GAC3CT,EAAE,yBAAyBM,KAAK,UAAWI,EAC/C,EAMAC,iBAAkB,WACd,IAAIC,EAAQX,EAAIM,eACZK,GACAZ,EAAE,oBAAsBC,EAAII,eAAiB,MAAMQ,IAAID,EAE/D,EAUAE,QAAS,SAAUC,EAASC,EAAIC,GACxBnB,OAAOgB,QAAQC,IACdC,GAAMA,KAENC,GAAUA,GAEnB,EAqCAC,aAAc,SAAUC,EAAIC,GACxB,IAQIC,EARAC,EAAQH,EAAGb,KAAK,aAAeN,EAAE,IAAMmB,EAAGb,KAAK,cAAgBa,EAAGI,QAAQ,QAC1EC,GAAUL,EAAGM,KAAK,WAAaH,EAAQA,EAAMhB,KAAK,UAAYa,EAAGM,KAAK,UACtEC,EAASP,EAAGb,KAAK,QACjBqB,EAAgBD,GAAqB,MAAXA,EAC1BE,EAAST,EAAGM,KAAK,UACjBI,EAAiBD,GAAU5B,EAAE8B,cAAcF,GAC3CG,EAAOZ,EAAGM,KAAK,QACfO,OAAmBC,IAATF,GAA+B,IAATA,GAAc/B,EAAEkC,QAAQH,KAExDI,EAAc,CAAC,EAqCnB,GA/BAnC,EAAEoC,KALmB,CAAC,SAAU,QAAS,WAAY,SAAU,OAAQ,gBAC/D,SAAU,UAAW,SAAU,WAIhB,SAAUC,EAAOC,GAChCT,GAAkBD,EAAOW,eAAeD,IACxCE,QAAQC,MAAM,mBAAqBH,EAArB,wEAGtB,IAEIN,SAEsBC,KADtBZ,EAAgBF,EAAGM,KAAK,oBACYJ,EAAcqB,SAC9CrB,EAAgBF,EAAGI,QAAQ,yBAAyBjB,KAAK,MAClD,IAAMa,EAAGI,QAAQ,yBAAyBjB,KAAK,MAChD,IAELe,EAAcqB,SACfrB,EAAgB,QAEpBc,EAAc,CACVQ,UAAWtB,EACXuB,OAAQzB,EAAGM,KAAK,mBAChBoB,UAAW1B,EAAGM,KAAK,sBACnBqB,SAAU3B,EAAGM,KAAK,iBAClBsB,aAAc5B,EAAGM,KAAK,sBACtBuB,gBAAiB7B,EAAGM,KAAK,yBACzBwB,oBAAqB9B,EAAGM,KAAK,8BAC7ByB,QAAS/B,EAAGM,KAAK,gBACjB0B,cAAe/B,EACfgC,eAAgBjC,SAITc,IAAXT,EAAJ,CAcA,IAAI6B,EACAC,EACAC,GAAWjC,EAAMoB,OACrB,GAAKa,EAOE,CACE5B,IACDD,EAASzB,EAAIuD,iBAEjBlC,EAAQtB,EAAE,UAAW,CAACwB,OAAQA,EAAQE,OAAQA,IAC9C,IAAI+B,EAAStC,EAAGb,KAAK,UASrB,GARImD,GACAnC,EAAMhB,KAAK,SAAUmD,GAEpB,cAAcC,KAAKlC,KACpBF,EAAMqC,OAAO3D,EAAE,WAAY,CAACS,KAAM,UAAWC,MAAOc,EAAQoC,KAAM,YAClEpC,EAAS,OACTF,EAAMhB,KAAK,SAAUkB,IAErB,QAAQkC,KAAKlC,GAAS,CACtB,IAAIqC,EAAY5D,EAAII,eAChBwD,GACAvC,EAAMqC,OAAO3D,EAAE,WAAY,CAACS,KAAMoD,EAAWnD,MAAOT,EAAIM,eAAgBqD,KAAM,WAEtF,CACAtC,EAAMwC,OAAOC,SAAS,OAC1B,MA3BIV,EAAY/B,EAAMhB,KAAK,UACvBgB,EAAMhB,KAAK,SAAUkB,GACjBG,IACA2B,EAAYhC,EAAMhB,KAAK,UACvBgB,EAAMhB,KAAK,SAAUoB,IAyB7B,IAAIsC,EAAiB1C,EAAMG,KAAK,iBAC5BuC,IAEAA,EAAeC,aAAe9C,GAG9BU,GACA7B,EAAEoC,KAAKR,GAAQ,SAAUnB,EAAMC,GAC3BY,EAAMqC,OAAO3D,EAAE,YAAYM,KAAK,CAACG,KAAMA,EAAMC,MAAOA,EAAOkD,KAAM,WACrE,IAGA5B,GACAV,EAAM4C,GAAG,UAAU,SAAUC,GACzBnE,EAAE+B,KAAKqC,OAAOD,EAAGhC,EACrB,IAGJb,EAAM+C,QAAQ,UAEdrE,EAAEsE,KAAKhD,EAAMG,KAAK,6BAA6B8C,MAAK,WAC5ChB,EACAjC,EAAMkD,eAIQvC,IAAdqB,GACAhC,EAAMhB,KAAK,SAAUgD,GAEzBhC,EAAMhB,KAAK,SAAU+C,GAEjBxB,GACA7B,EAAEoC,KAAKR,GAAQ,SAAUnB,GACrBT,EAAE,eAAiBS,EAAO,KAAMa,GAAOkD,QAC3C,IAER,GAvEA,MAXQ7C,EACAK,EAAUhC,EAAE+B,KAAK0C,MAAMrD,EAAOe,GAAerC,OAAO4E,SAASC,OAAOjD,GAC7DP,EAAGyD,GAAG,YAActD,EAAMoB,SAC7BV,GACAV,EAAM4C,GAAG,UAAU,SAAUC,GACzBnE,EAAE+B,KAAKqC,OAAOD,EAAGhC,EACrB,IAEJb,EAAM+C,QAAQ,UA2E1B,EAEAQ,eAAgB,SAAUC,GACtB,IAAIC,EAAMD,EAAIE,QAAQ,KACtB,GAAID,EAAM,EACN,MAAO,CAAC,EAQZ,IALA,IAAIE,EAAQjF,EAAEkF,KAAKJ,EAAIK,UAAUJ,EAAM,GAAGK,MAAM,KAAK,GAAGA,MAAM,MAAM,SAAU1E,GAC1E,MAAiB,KAAVA,CACX,IACIkB,EAAS,CAAC,EAELyD,EAAI,EAAGC,EAAML,EAAMvC,OAAQ2C,EAAIC,EAAKD,IAAK,CAC9C,IAAIE,EAAON,EAAMI,GAAGD,MAAM,KACtB3E,EAAO+E,mBAAmBD,EAAK,GAAG1C,QAAQ,MAAO,QACjDnC,EAAQ6E,EAAK7C,OAAS,EAAI8C,mBAAmBD,EAAK,GAAG1C,QAAQ,MAAO,QAAU,GAC7EpC,EAAKiC,cAGWT,IAAjBL,EAAOnB,GACPmB,EAAOnB,GAAQC,GAAS,IAEnBV,EAAEyF,QAAQ7D,EAAOnB,MAClBmB,EAAOnB,GAAQ,CAACmB,EAAOnB,KAE3BmB,EAAOnB,GAAMmC,KAAKlC,GAAS,KAEnC,CAEA,OAAOkB,CACX,EAEA8D,WAAY,SAAUC,SACM1D,IAApB0D,EAAOC,UAA2BD,EAAOC,YAGzC5F,EAAE6F,WAAWF,EAAOG,OACpBH,EAAOG,OAEX9F,EAAEoC,KAAKuD,GAAQ,WACP3F,EAAE8B,cAAciE,OAChB9F,EAAIyF,WAAWK,KAEvB,IACJ,EAEAD,KAAM,WA+CV,IAkBQE,EAoFAC,EAzHJjG,EAAEkG,eAAc,SAAUC,EAASC,EAAiBC,IAC3CF,EAAQG,aAAerG,EAAII,gBAC5BgG,EAAIE,iBAAiB,eAAgBtG,EAAIM,eAEjD,IACAN,EAAIU,mBAMJX,EAAEwG,UAAUC,cAAa,SAAUrF,EAAOiF,GACtC,IAAIvB,EAAMuB,GAAOA,EAAIK,kBAAkB,cACnC5B,GACAhF,OAAO4E,SAASC,OAAOG,EAE/B,IAqBIkB,EAAgB,CAAC,EAErBhG,EAAE,eAAeoC,MAAK,WAClB,IAAI0C,EAAM6B,EAAeZ,KAAKa,KAC9BZ,EAAclB,IAAO,CACzB,IAEA9E,EAAEkG,cAAc,UAAU,SAAUC,EAASC,EAAiBC,GAC1D,GAAwB,SAApBF,EAAQU,SAAZ,CAIA,IAAI/B,EAAM6B,EAAeR,EAAQrB,KAC7BgC,GAA+C,IAAvBd,EAAclB,KAAkBiC,EAAkBjC,GAC1EkC,OAAwC/E,IAAvB+D,EAAclB,KAAwD,IAAlCkB,EAAclB,GAAc,QAEjFgC,GAAyBE,EACzBX,EAAIY,cAImBhF,IAAvB+D,EAAclB,KAA6C,IAAvBkB,EAAclB,KAClDkB,EAAclB,GAAO,CACjBoC,QAAS,GACTC,SAAS,IAIjBd,EAAI9B,MAAK,SAAU9C,EAAM2F,EAAYC,GAEjC,IAA+C,IAA3CrB,EAAcqB,EAAMC,QAAiB,QAAzC,CAIAtB,EAAcqB,EAAMC,QAAiB,SAAI,EAEzC,IAAK,IAAIjC,EAAI,EAAGC,EAAMU,EAAcqB,EAAMC,QAAiB,QAAE5E,OAAQ2C,EAAIC,EAAKD,IAAK,CAC/E,IAAIkC,EAAYvB,EAAcqB,EAAMC,QAAiB,QAAEjC,GACnDkC,GAAaA,EAAUC,aAAeC,eAAeC,MACrDH,EAAUN,OAElB,CAEAjB,EAAcqB,EAAMC,SAAU,CAX9B,CAYJ,IAAGK,MAAK,SAAUN,EAAOD,GACrB,GAAmB,UAAfA,EAAJ,QAIOpB,EAAcqB,EAAMC,QAAiB,QAAED,EAAMO,UAGpD,IADA,IAAIC,GAAY,EACPxC,EAAI,EAAGC,EAAMU,EAAcqB,EAAMC,QAAiB,QAAE5E,OAAQ2C,EAAIC,EAAKD,IACtEW,EAAcqB,EAAMC,QAAiB,QAAEjC,KACvCwC,GAAY,GAIhBA,UACO7B,EAAcqB,EAAMC,OAZ/B,CAcJ,IAEAjB,EAAIuB,SAAW5B,EAAclB,GAAc,QAAEpC,OAC7C2D,EAAIiB,OAASxC,EAEbkB,EAAclB,GAAc,QAAEuB,EAAIuB,UAAYvB,EAxD9C,CAyDJ,IAEArG,EAAEwG,UAAUC,cAAa,WACrB,IAAIqB,EAAc,GAClB9H,EAAE,wBAAwBoC,MAAK,WAC3B,IAAI0C,EAAM6B,EAAeZ,KAAKgC,MAC1BhB,EAAkBjC,MAIW,IAAjC9E,EAAEgI,QAAQlD,EAAKgD,GAAsBA,EAAYlF,KAAKkC,GAAO9E,EAAE+F,MAAMvB,SACzE,GACJ,IAKIyB,EAAU,SAAU7E,GACpB,IAAI6G,EAAQjI,EAAE+F,MACVvE,EAASyG,EAAMxG,KAAK,UACpBV,EAAUkH,EAAMxG,KAAK,WACrByG,EAAOD,EAAMxG,KAAK,QAEtB,YAAeQ,IAAXT,QAAoCS,IAAZlB,QAAkCkB,IAATiG,SAIrCjG,IAAZlB,IAAqC,IAAZA,GAAiC,KAAZA,EAC9Cf,EAAEmI,MAAMlI,EAAIa,QAASiF,KAArB/F,CAA2Be,GAAS,WAChCd,EAAIiB,aAAa+G,EAAO7G,EAC5B,IAEAnB,EAAIiB,aAAa+G,EAAO7G,GAE5BA,EAAMgH,4BACC,EACX,EAGApI,EAAEwG,UAAUtC,GAAG,YAAajE,EAAIE,kBAAmB8F,GAC9C/B,GAAG,aAAcjE,EAAIG,mBAAoB6F,EAvK9C,EAMAoC,kBAAmB,WACf,OAAOvI,OAAO4E,SAAS4D,SAAW,KAAOxI,OAAO4E,SAAS6D,IAC7D,EAOA/E,cAAe,WACX,OAAO1D,OAAO4E,SAASqD,IAC3B,GAyJJ,SAAShB,EAAkBjC,GAEvB,IAAK,IAAIO,EAAI,EAAGA,EAAIpF,EAAIC,kBAAkBwC,OAAQ2C,IAAK,CACnD,IAAImD,EAAO7B,EAAe1G,EAAIC,kBAAkBmF,IAEhD,IAAc,IADF,IAAIoD,OAAO,KAUTC,EAV4BF,EAYvCE,EAAI7F,QAAQ,sCAAuC,SAZNuC,MAAM,OAAOuD,KAAK,MAAQ,KAAKjF,KAAKoB,GAEhF,OAAO,CAEf,CAMJ,IAAsB4D,EAJlB,OAAO,CACX,CAaA,SAAS/B,EAAe7B,GAEpB,MAAyB,MAAlBA,EAAI8D,OAAO,GAAa3I,EAAIoI,oBAAsBvD,EAAMA,CACnE,CAEA,OAAO7E,CACX,CA5ec,CA4eXH,OAAO+I,QAEV/I,OAAO+I,QAAO,WACV/I,OAAOC,IAAI2F,WAAW5F,OAAOC,IACjC","sources":["webpack://kanban/../vendor/yiisoft/yii2/assets/yii.js"],"sourcesContent":["/**\n * Yii JavaScript module.\n *\n * @link https://www.yiiframework.com/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license https://www.yiiframework.com/license/\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n */\n\n/**\n * yii is the root module for all Yii JavaScript modules.\n * It implements a mechanism of organizing JavaScript code in modules through the function \"yii.initModule()\".\n *\n * Each module should be named as \"x.y.z\", where \"x\" stands for the root module (for the Yii core code, this is \"yii\").\n *\n * A module may be structured as follows:\n *\n * ```javascript\n * window.yii.sample = (function($) {\n *     var pub = {\n *         // whether this module is currently active. If false, init() will not be called for this module\n *         // it will also not be called for all its child modules. If this property is undefined, it means true.\n *         isActive: true,\n *         init: function() {\n *             // ... module initialization code goes here ...\n *         },\n *\n *         // ... other public functions and properties go here ...\n *     };\n *\n *     // ... private functions and properties go here ...\n *\n *     return pub;\n * })(window.jQuery);\n * ```\n *\n * Using this structure, you can define public and private functions/properties for a module.\n * Private functions/properties are only visible within the module, while public functions/properties\n * may be accessed outside of the module. For example, you can access \"yii.sample.isActive\".\n *\n * You must call \"yii.initModule()\" once for the root module of all your modules.\n */\nwindow.yii = (function ($) {\n    var pub = {\n        /**\n         * List of JS or CSS URLs that can be loaded multiple times via AJAX requests.\n         * Each item may be represented as either an absolute URL or a relative one.\n         * Each item may contain a wildcard matching character `*`, that means one or more\n         * any characters on the position. For example:\n         *  - `/css/*.css` will match any file ending with `.css` in the `css` directory of the current web site\n         *  - `http*://cdn.example.com/*` will match any files on domain `cdn.example.com`, loaded with HTTP or HTTPS\n         *  - `/js/myCustomScript.js?realm=*` will match file `/js/myCustomScript.js` with defined `realm` parameter\n         */\n        reloadableScripts: [],\n        /**\n         * The selector for clickable elements that need to support confirmation and form submission.\n         */\n        clickableSelector: 'a, button, input[type=\"submit\"], input[type=\"button\"], input[type=\"reset\"], ' +\n            'input[type=\"image\"]',\n        /**\n         * The selector for changeable elements that need to support confirmation and form submission.\n         */\n        changeableSelector: 'select, input, textarea',\n\n        /**\n         * @return string|undefined the CSRF parameter name. Undefined is returned if CSRF validation is not enabled.\n         */\n        getCsrfParam: function () {\n            return $('meta[name=csrf-param]').attr('content');\n        },\n\n        /**\n         * @return string|undefined the CSRF token. Undefined is returned if CSRF validation is not enabled.\n         */\n        getCsrfToken: function () {\n            return $('meta[name=csrf-token]').attr('content');\n        },\n\n        /**\n         * Sets the CSRF token in the meta elements.\n         * This method is provided so that you can update the CSRF token with the latest one you obtain from the server.\n         * @param name the CSRF token name\n         * @param value the CSRF token value\n         */\n        setCsrfToken: function (name, value) {\n            $('meta[name=csrf-param]').attr('content', name);\n            $('meta[name=csrf-token]').attr('content', value);\n        },\n\n        /**\n         * Updates all form CSRF input fields with the latest CSRF token.\n         * This method is provided to avoid cached forms containing outdated CSRF tokens.\n         */\n        refreshCsrfToken: function () {\n            var token = pub.getCsrfToken();\n            if (token) {\n                $('form input[name=\"' + pub.getCsrfParam() + '\"]').val(token);\n            }\n        },\n\n        /**\n         * Displays a confirmation dialog.\n         * The default implementation simply displays a js confirmation dialog.\n         * You may override this by setting `yii.confirm`.\n         * @param message the confirmation message.\n         * @param ok a callback to be called when the user confirms the message\n         * @param cancel a callback to be called when the user cancels the confirmation\n         */\n        confirm: function (message, ok, cancel) {\n            if (window.confirm(message)) {\n                !ok || ok();\n            } else {\n                !cancel || cancel();\n            }\n        },\n\n        /**\n         * Handles the action triggered by user.\n         * This method recognizes the `data-method` attribute of the element. If the attribute exists,\n         * the method will submit the form containing this element. If there is no containing form, a form\n         * will be created and submitted using the method given by this attribute value (e.g. \"post\", \"put\").\n         * For hyperlinks, the form action will take the value of the \"href\" attribute of the link.\n         * For other elements, either the containing form action or the current page URL will be used\n         * as the form action URL.\n         *\n         * If the `data-method` attribute is not defined, the `href` attribute (if any) of the element\n         * will be assigned to `window.location`.\n         *\n         * Starting from version 2.0.3, the `data-params` attribute is also recognized when you specify\n         * `data-method`. The value of `data-params` should be a JSON representation of the data (name-value pairs)\n         * that should be submitted as hidden inputs. For example, you may use the following code to generate\n         * such a link:\n         *\n         * ```php\n         * use yii\\helpers\\Html;\n         * use yii\\helpers\\Json;\n         *\n         * echo Html::a('submit', ['site/foobar'], [\n         *     'data' => [\n         *         'method' => 'post',\n         *         'params' => [\n         *             'name1' => 'value1',\n         *             'name2' => 'value2',\n         *         ],\n         *     ],\n         * ]);\n         * ```\n         *\n         * @param $e the jQuery representation of the element\n         * @param event Related event\n         */\n        handleAction: function ($e, event) {\n            var $form = $e.attr('data-form') ? $('#' + $e.attr('data-form')) : $e.closest('form'),\n                method = !$e.data('method') && $form ? $form.attr('method') : $e.data('method'),\n                action = $e.attr('href'),\n                isValidAction = action && action !== '#',\n                params = $e.data('params'),\n                areValidParams = params && $.isPlainObject(params),\n                pjax = $e.data('pjax'),\n                usePjax = pjax !== undefined && pjax !== 0 && $.support.pjax,\n                pjaxContainer,\n                pjaxOptions = {},\n                conflictParams = ['submit', 'reset', 'elements', 'length', 'name', 'acceptCharset',\n                    'action', 'enctype', 'method', 'target'];\n\n            // Forms and their child elements should not use input names or ids that conflict with properties of a form,\n            // such as submit, length, or method.\n            $.each(conflictParams, function (index, param) {\n                if (areValidParams && params.hasOwnProperty(param)) {\n                    console.error(\"Parameter name '\" + param + \"' conflicts with a same named form property. \" +\n                        \"Please use another name.\");\n                }\n            });\n\n            if (usePjax) {\n                pjaxContainer = $e.data('pjax-container');\n                if (pjaxContainer === undefined || !pjaxContainer.length) {\n                    pjaxContainer = $e.closest('[data-pjax-container]').attr('id')\n                        ? ('#' + $e.closest('[data-pjax-container]').attr('id'))\n                        : '';\n                }\n                if (!pjaxContainer.length) {\n                    pjaxContainer = 'body';\n                }\n                pjaxOptions = {\n                    container: pjaxContainer,\n                    push: !!$e.data('pjax-push-state'),\n                    replace: !!$e.data('pjax-replace-state'),\n                    scrollTo: $e.data('pjax-scrollto'),\n                    pushRedirect: $e.data('pjax-push-redirect'),\n                    replaceRedirect: $e.data('pjax-replace-redirect'),\n                    skipOuterContainers: $e.data('pjax-skip-outer-containers'),\n                    timeout: $e.data('pjax-timeout'),\n                    originalEvent: event,\n                    originalTarget: $e\n                };\n            }\n\n            if (method === undefined) {\n                if (isValidAction) {\n                    usePjax ? $.pjax.click(event, pjaxOptions) : window.location.assign(action);\n                } else if ($e.is(':submit') && $form.length) {\n                    if (usePjax) {\n                        $form.on('submit', function (e) {\n                            $.pjax.submit(e, pjaxOptions);\n                        });\n                    }\n                    $form.trigger('submit');\n                }\n                return;\n            }\n\n            var oldMethod,\n                oldAction,\n                newForm = !$form.length;\n            if (!newForm) {\n                oldMethod = $form.attr('method');\n                $form.attr('method', method);\n                if (isValidAction) {\n                    oldAction = $form.attr('action');\n                    $form.attr('action', action);\n                }\n            } else {\n                if (!isValidAction) {\n                    action = pub.getCurrentUrl();\n                }\n                $form = $('<form/>', {method: method, action: action});\n                var target = $e.attr('target');\n                if (target) {\n                    $form.attr('target', target);\n                }\n                if (!/(get|post)/i.test(method)) {\n                    $form.append($('<input/>', {name: '_method', value: method, type: 'hidden'}));\n                    method = 'post';\n                    $form.attr('method', method);\n                }\n                if (/post/i.test(method)) {\n                    var csrfParam = pub.getCsrfParam();\n                    if (csrfParam) {\n                        $form.append($('<input/>', {name: csrfParam, value: pub.getCsrfToken(), type: 'hidden'}));\n                    }\n                }\n                $form.hide().appendTo('body');\n            }\n\n            var activeFormData = $form.data('yiiActiveForm');\n            if (activeFormData) {\n                // Remember the element triggered the form submission. This is used by yii.activeForm.js.\n                activeFormData.submitObject = $e;\n            }\n\n            if (areValidParams) {\n                $.each(params, function (name, value) {\n                    $form.append($('<input/>').attr({name: name, value: value, type: 'hidden'}));\n                });\n            }\n\n            if (usePjax) {\n                $form.on('submit', function (e) {\n                    $.pjax.submit(e, pjaxOptions);\n                });\n            }\n\n            $form.trigger('submit');\n\n            $.when($form.data('yiiSubmitFinalizePromise')).done(function () {\n                if (newForm) {\n                    $form.remove();\n                    return;\n                }\n\n                if (oldAction !== undefined) {\n                    $form.attr('action', oldAction);\n                }\n                $form.attr('method', oldMethod);\n\n                if (areValidParams) {\n                    $.each(params, function (name) {\n                        $('input[name=\"' + name + '\"]', $form).remove();\n                    });\n                }\n            });\n        },\n\n        getQueryParams: function (url) {\n            var pos = url.indexOf('?');\n            if (pos < 0) {\n                return {};\n            }\n\n            var pairs = $.grep(url.substring(pos + 1).split('#')[0].split('&'), function (value) {\n                return value !== '';\n            });\n            var params = {};\n\n            for (var i = 0, len = pairs.length; i < len; i++) {\n                var pair = pairs[i].split('=');\n                var name = decodeURIComponent(pair[0].replace(/\\+/g, '%20'));\n                var value = pair.length > 1 ? decodeURIComponent(pair[1].replace(/\\+/g, '%20')) : '';\n                if (!name.length) {\n                    continue;\n                }\n                if (params[name] === undefined) {\n                    params[name] = value || '';\n                } else {\n                    if (!$.isArray(params[name])) {\n                        params[name] = [params[name]];\n                    }\n                    params[name].push(value || '');\n                }\n            }\n\n            return params;\n        },\n\n        initModule: function (module) {\n            if (module.isActive !== undefined && !module.isActive) {\n                return;\n            }\n            if ($.isFunction(module.init)) {\n                module.init();\n            }\n            $.each(module, function () {\n                if ($.isPlainObject(this)) {\n                    pub.initModule(this);\n                }\n            });\n        },\n\n        init: function () {\n            initCsrfHandler();\n            initRedirectHandler();\n            initAssetFilters();\n            initDataMethods();\n        },\n\n        /**\n         * Returns the URL of the current page without params and trailing slash. Separated and made public for testing.\n         * @returns {string}\n         */\n        getBaseCurrentUrl: function () {\n            return window.location.protocol + '//' + window.location.host;\n        },\n\n        /**\n         * Returns the URL of the current page. Used for testing, you can always call `window.location.href` manually\n         * instead.\n         * @returns {string}\n         */\n        getCurrentUrl: function () {\n            return window.location.href;\n        }\n    };\n\n    function initCsrfHandler()\n    {\n        // automatically send CSRF token for all AJAX requests\n        $.ajaxPrefilter(function (options, originalOptions, xhr) {\n            if (!options.crossDomain && pub.getCsrfParam()) {\n                xhr.setRequestHeader('X-CSRF-Token', pub.getCsrfToken());\n            }\n        });\n        pub.refreshCsrfToken();\n    }\n\n    function initRedirectHandler()\n    {\n        // handle AJAX redirection\n        $(document).ajaxComplete(function (event, xhr) {\n            var url = xhr && xhr.getResponseHeader('X-Redirect');\n            if (url) {\n                window.location.assign(url);\n            }\n        });\n    }\n\n    function initAssetFilters()\n    {\n        /**\n         * Used for storing loaded scripts and information about loading each script if it's in the process of loading.\n         * A single script can have one of the following values:\n         *\n         * - `undefined` - script was not loaded at all before or was loaded with error last time.\n         * - `true` (boolean) -  script was successfully loaded.\n         * - object - script is currently loading.\n         *\n         * In case of a value being an object the properties are:\n         * - `xhrList` - represents a queue of XHR requests sent to the same URL (related with this script) in the same\n         * small period of time.\n         * - `xhrDone` - boolean, acts like a locking mechanism. When one of the XHR requests in the queue is\n         * successfully completed, it will abort the rest of concurrent requests to the same URL until cleanup is done\n         * to prevent possible errors and race conditions.\n         * @type {{}}\n         */\n        var loadedScripts = {};\n\n        $('script[src]').each(function () {\n            var url = getAbsoluteUrl(this.src);\n            loadedScripts[url] = true;\n        });\n\n        $.ajaxPrefilter('script', function (options, originalOptions, xhr) {\n            if (options.dataType == 'jsonp') {\n                return;\n            }\n\n            var url = getAbsoluteUrl(options.url),\n                forbiddenRepeatedLoad = loadedScripts[url] === true && !isReloadableAsset(url),\n                cleanupRunning = loadedScripts[url] !== undefined && loadedScripts[url]['xhrDone'] === true;\n\n            if (forbiddenRepeatedLoad || cleanupRunning) {\n                xhr.abort();\n                return;\n            }\n\n            if (loadedScripts[url] === undefined || loadedScripts[url] === true) {\n                loadedScripts[url] = {\n                    xhrList: [],\n                    xhrDone: false\n                };\n            }\n\n            xhr.done(function (data, textStatus, jqXHR) {\n                // If multiple requests were successfully loaded, perform cleanup only once\n                if (loadedScripts[jqXHR.yiiUrl]['xhrDone'] === true) {\n                    return;\n                }\n\n                loadedScripts[jqXHR.yiiUrl]['xhrDone'] = true;\n\n                for (var i = 0, len = loadedScripts[jqXHR.yiiUrl]['xhrList'].length; i < len; i++) {\n                    var singleXhr = loadedScripts[jqXHR.yiiUrl]['xhrList'][i];\n                    if (singleXhr && singleXhr.readyState !== XMLHttpRequest.DONE) {\n                        singleXhr.abort();\n                    }\n                }\n\n                loadedScripts[jqXHR.yiiUrl] = true;\n            }).fail(function (jqXHR, textStatus) {\n                if (textStatus === 'abort') {\n                    return;\n                }\n\n                delete loadedScripts[jqXHR.yiiUrl]['xhrList'][jqXHR.yiiIndex];\n\n                var allFailed = true;\n                for (var i = 0, len = loadedScripts[jqXHR.yiiUrl]['xhrList'].length; i < len; i++) {\n                    if (loadedScripts[jqXHR.yiiUrl]['xhrList'][i]) {\n                        allFailed = false;\n                    }\n                }\n\n                if (allFailed) {\n                    delete loadedScripts[jqXHR.yiiUrl];\n                }\n            });\n            // Use prefix for custom XHR properties to avoid possible conflicts with existing properties\n            xhr.yiiIndex = loadedScripts[url]['xhrList'].length;\n            xhr.yiiUrl = url;\n\n            loadedScripts[url]['xhrList'][xhr.yiiIndex] = xhr;\n        });\n\n        $(document).ajaxComplete(function () {\n            var styleSheets = [];\n            $('link[rel=stylesheet]').each(function () {\n                var url = getAbsoluteUrl(this.href);\n                if (isReloadableAsset(url)) {\n                    return;\n                }\n\n                $.inArray(url, styleSheets) === -1 ? styleSheets.push(url) : $(this).remove();\n            });\n        });\n    }\n\n    function initDataMethods()\n    {\n        var handler = function (event) {\n            var $this = $(this),\n                method = $this.data('method'),\n                message = $this.data('confirm'),\n                form = $this.data('form');\n\n            if (method === undefined && message === undefined && form === undefined) {\n                return true;\n            }\n\n            if (message !== undefined && message !== false && message !== '') {\n                $.proxy(pub.confirm, this)(message, function () {\n                    pub.handleAction($this, event);\n                });\n            } else {\n                pub.handleAction($this, event);\n            }\n            event.stopImmediatePropagation();\n            return false;\n        };\n\n        // handle data-confirm and data-method for clickable and changeable elements\n        $(document).on('click.yii', pub.clickableSelector, handler)\n            .on('change.yii', pub.changeableSelector, handler);\n    }\n\n    function isReloadableAsset(url)\n    {\n        for (var i = 0; i < pub.reloadableScripts.length; i++) {\n            var rule = getAbsoluteUrl(pub.reloadableScripts[i]);\n            var match = new RegExp(\"^\" + escapeRegExp(rule).split('\\\\*').join('.+') + \"$\").test(url);\n            if (match === true) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex/6969486#6969486\n    function escapeRegExp(str)\n    {\n        return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n    }\n\n    /**\n     * Returns absolute URL based on the given URL\n     * @param {string} url Initial URL\n     * @returns {string}\n     */\n    function getAbsoluteUrl(url)\n    {\n        return url.charAt(0) === '/' ? pub.getBaseCurrentUrl() + url : url;\n    }\n\n    return pub;\n})(window.jQuery);\n\nwindow.jQuery(function () {\n    window.yii.initModule(window.yii);\n});\n"],"names":["window","yii","$","pub","reloadableScripts","clickableSelector","changeableSelector","getCsrfParam","attr","getCsrfToken","setCsrfToken","name","value","refreshCsrfToken","token","val","confirm","message","ok","cancel","handleAction","$e","event","pjaxContainer","$form","closest","method","data","action","isValidAction","params","areValidParams","isPlainObject","pjax","usePjax","undefined","support","pjaxOptions","each","index","param","hasOwnProperty","console","error","length","container","push","replace","scrollTo","pushRedirect","replaceRedirect","skipOuterContainers","timeout","originalEvent","originalTarget","oldMethod","oldAction","newForm","getCurrentUrl","target","test","append","type","csrfParam","hide","appendTo","activeFormData","submitObject","on","e","submit","trigger","when","done","remove","click","location","assign","is","getQueryParams","url","pos","indexOf","pairs","grep","substring","split","i","len","pair","decodeURIComponent","isArray","initModule","module","isActive","isFunction","init","this","loadedScripts","handler","ajaxPrefilter","options","originalOptions","xhr","crossDomain","setRequestHeader","document","ajaxComplete","getResponseHeader","getAbsoluteUrl","src","dataType","forbiddenRepeatedLoad","isReloadableAsset","cleanupRunning","abort","xhrList","xhrDone","textStatus","jqXHR","yiiUrl","singleXhr","readyState","XMLHttpRequest","DONE","fail","yiiIndex","allFailed","styleSheets","href","inArray","$this","form","proxy","stopImmediatePropagation","getBaseCurrentUrl","protocol","host","rule","RegExp","str","join","charAt","jQuery"],"sourceRoot":""}