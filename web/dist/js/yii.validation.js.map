{"version":3,"file":"yii.validation.js","mappings":"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","sources":["webpack://kanban/../vendor/yiisoft/yii2/assets/yii.validation.js"],"sourcesContent":["/**\n * Yii validation module.\n *\n * This JavaScript module provides the validation methods for the built-in validators.\n *\n * @link https://www.yiiframework.com/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license https://www.yiiframework.com/license/\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n */\n\nyii.validation = (function ($) {\n    var pub = {\n        isEmpty: function (value) {\n            return value === null || value === undefined || ($.isArray(value) && value.length === 0) || value === '';\n        },\n\n        addMessage: function (messages, message, value) {\n            messages.push(message.replace(/\\{value\\}/g, value));\n        },\n\n        required: function (value, messages, options) {\n            var valid = false;\n            if (options.requiredValue === undefined) {\n                var isString = typeof value == 'string' || value instanceof String;\n                if (options.strict && value !== undefined || !options.strict && !pub.isEmpty(isString ? trimString(value) : value)) {\n                    valid = true;\n                }\n            } else if (!options.strict && value == options.requiredValue || options.strict && value === options.requiredValue) {\n                valid = true;\n            }\n\n            if (!valid) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        // \"boolean\" is a reserved keyword in older versions of ES so it's quoted for IE < 9 support\n        'boolean': function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n            var valid = !options.strict && (value == options.trueValue || value == options.falseValue)\n                || options.strict && (value === options.trueValue || value === options.falseValue);\n\n            if (!valid) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        string: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            if (typeof value !== 'string') {\n                pub.addMessage(messages, options.message, value);\n                return;\n            }\n\n            if (options.is !== undefined && value.length != options.is) {\n                pub.addMessage(messages, options.notEqual, value);\n                return;\n            }\n            if (options.min !== undefined && value.length < options.min) {\n                pub.addMessage(messages, options.tooShort, value);\n            }\n            if (options.max !== undefined && value.length > options.max) {\n                pub.addMessage(messages, options.tooLong, value);\n            }\n        },\n\n        file: function (attribute, messages, options) {\n            var files = getUploadedFiles(attribute, messages, options);\n            $.each(files, function (i, file) {\n                validateFile(file, messages, options);\n            });\n        },\n\n        image: function (attribute, messages, options, deferredList) {\n            var files = getUploadedFiles(attribute, messages, options);\n            $.each(files, function (i, file) {\n                validateFile(file, messages, options);\n\n                // Skip image validation if FileReader API is not available\n                if (typeof FileReader === \"undefined\") {\n                    return;\n                }\n\n                var deferred = $.Deferred();\n                pub.validateImage(file, messages, options, deferred, new FileReader(), new Image());\n                deferredList.push(deferred);\n            });\n        },\n\n        validateImage: function (file, messages, options, deferred, fileReader, image) {\n            image.onload = function () {\n                validateImageSize(file, image, messages, options);\n                deferred.resolve();\n            };\n\n            image.onerror = function () {\n                messages.push(options.notImage.replace(/\\{file\\}/g, file.name));\n                deferred.resolve();\n            };\n\n            fileReader.onload = function () {\n                image.src = this.result;\n            };\n\n            // Resolve deferred if there was error while reading data\n            fileReader.onerror = function () {\n                deferred.resolve();\n            };\n\n            fileReader.readAsDataURL(file);\n        },\n\n        number: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            if (typeof value === 'string' && !options.pattern.test(value)) {\n                pub.addMessage(messages, options.message, value);\n                return;\n            }\n\n            if (options.min !== undefined && value < options.min) {\n                pub.addMessage(messages, options.tooSmall, value);\n            }\n            if (options.max !== undefined && value > options.max) {\n                pub.addMessage(messages, options.tooBig, value);\n            }\n        },\n\n        range: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            if (!options.allowArray && $.isArray(value)) {\n                pub.addMessage(messages, options.message, value);\n                return;\n            }\n\n            var inArray = true;\n\n            $.each($.isArray(value) ? value : [value], function (i, v) {\n                if ($.inArray(v, options.range) == -1) {\n                    inArray = false;\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n\n            if (options.not === undefined) {\n                options.not = false;\n            }\n\n            if (options.not === inArray) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        regularExpression: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            if (!options.not && !options.pattern.test(value) || options.not && options.pattern.test(value)) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        email: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            var valid = true,\n                regexp = /^((?:\"?([^\"]*)\"?\\s)?)(?:\\s+)?(?:(<?)((.+)@([^>]+))(>?))$/,\n                matches = regexp.exec(value);\n\n            if (matches === null) {\n                valid = false;\n            } else {\n                var localPart = matches[5],\n                    domain = matches[6];\n\n                if (options.enableIDN) {\n                    localPart = punycode.toASCII(localPart);\n                    domain = punycode.toASCII(domain);\n\n                    value = matches[1] + matches[3] + localPart + '@' + domain + matches[7];\n                }\n\n                if (localPart.length > 64) {\n                    valid = false;\n                } else if ((localPart + '@' + domain).length > 254) {\n                    valid = false;\n                } else {\n                    valid = options.pattern.test(value) || (options.allowName && options.fullPattern.test(value));\n                }\n            }\n\n            if (!valid) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        url: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            if (options.defaultScheme && !/:\\/\\//.test(value)) {\n                value = options.defaultScheme + '://' + value;\n            }\n\n            var valid = true;\n\n            if (options.enableIDN) {\n                var matches = /^([^:]+):\\/\\/([^\\/]+)(.*)$/.exec(value);\n                if (matches === null) {\n                    valid = false;\n                } else {\n                    value = matches[1] + '://' + punycode.toASCII(matches[2]) + matches[3];\n                }\n            }\n\n            if (!valid || !options.pattern.test(value)) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        trim: function ($form, attribute, options, value) {\n            var $input = $form.find(attribute.input);\n            if ($input.is(':checkbox, :radio')) {\n                return value;\n            }\n\n            value = $input.val();\n            if (\n                (!options.skipOnEmpty || !pub.isEmpty(value))\n                && (!options.skipOnArray || !Array.isArray(value))\n            ) {\n                if (Array.isArray(value)) {\n                    for (var i = 0; i < value.length; i++) {\n                        value[i] = trimString(value[i], options);\n                    }\n                } else {\n                    value = trimString(value, options);\n                }\n                $input.val(value);\n            }\n\n            return value;\n        },\n\n        captcha: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            // CAPTCHA may be updated via AJAX and the updated hash is stored in body data\n            var hash = $('body').data(options.hashKey);\n            hash = hash == null ? options.hash : hash[options.caseSensitive ? 0 : 1];\n            var v = options.caseSensitive ? value : value.toLowerCase();\n            for (var i = v.length - 1, h = 0; i >= 0; --i) {\n                h += v.charCodeAt(i) << i;\n            }\n            if (h != hash) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        compare: function (value, messages, options, $form) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            var compareValue,\n                valid = true;\n            if (options.compareAttribute === undefined) {\n                compareValue = options.compareValue;\n            } else {\n                var $target = $('#' + options.compareAttribute);\n                if (!$target.length) {\n                    $target = $form.find('[name=\"' + options.compareAttributeName + '\"]');\n                }\n                compareValue = $target.val();\n            }\n\n            if (options.type === 'number') {\n                value = value ? parseFloat(value) : 0;\n                compareValue = compareValue ? parseFloat(compareValue) : 0;\n            }\n            switch (options.operator) {\n                case '==':\n                    valid = value == compareValue;\n                    break;\n                case '===':\n                    valid = value === compareValue;\n                    break;\n                case '!=':\n                    valid = value != compareValue;\n                    break;\n                case '!==':\n                    valid = value !== compareValue;\n                    break;\n                case '>':\n                    valid = value > compareValue;\n                    break;\n                case '>=':\n                    valid = value >= compareValue;\n                    break;\n                case '<':\n                    valid = value < compareValue;\n                    break;\n                case '<=':\n                    valid = value <= compareValue;\n                    break;\n                default:\n                    valid = false;\n                    break;\n            }\n\n            if (!valid) {\n                pub.addMessage(messages, options.message, value);\n            }\n        },\n\n        ip: function (value, messages, options) {\n            if (options.skipOnEmpty && pub.isEmpty(value)) {\n                return;\n            }\n\n            var negation = null,\n                cidr = null,\n                matches = new RegExp(options.ipParsePattern).exec(value);\n            if (matches) {\n                negation = matches[1] || null;\n                value = matches[2];\n                cidr = matches[4] || null;\n            }\n\n            if (options.subnet === true && cidr === null) {\n                pub.addMessage(messages, options.messages.noSubnet, value);\n                return;\n            }\n            if (options.subnet === false && cidr !== null) {\n                pub.addMessage(messages, options.messages.hasSubnet, value);\n                return;\n            }\n            if (options.negation === false && negation !== null) {\n                pub.addMessage(messages, options.messages.message, value);\n                return;\n            }\n\n            var ipVersion = value.indexOf(':') === -1 ? 4 : 6;\n            if (ipVersion == 6) {\n                if (!(new RegExp(options.ipv6Pattern)).test(value)) {\n                    pub.addMessage(messages, options.messages.message, value);\n                }\n                if (!options.ipv6) {\n                    pub.addMessage(messages, options.messages.ipv6NotAllowed, value);\n                }\n            } else {\n                if (!(new RegExp(options.ipv4Pattern)).test(value)) {\n                    pub.addMessage(messages, options.messages.message, value);\n                }\n                if (!options.ipv4) {\n                    pub.addMessage(messages, options.messages.ipv4NotAllowed, value);\n                }\n            }\n        }\n    };\n\n    function getUploadedFiles(attribute, messages, options)\n    {\n        // Skip validation if File API is not available\n        if (typeof File === \"undefined\") {\n            return [];\n        }\n\n        var fileInput = $(attribute.input, attribute.$form).get(0);\n\n        // Skip validation if file input does not exist\n        // (in case file inputs are added dynamically and no file input has been added to the form)\n        if (typeof fileInput === \"undefined\") {\n            return [];\n        }\n\n        var files = fileInput.files;\n        if (!files) {\n            messages.push(options.message);\n            return [];\n        }\n\n        if (files.length === 0) {\n            if (!options.skipOnEmpty) {\n                messages.push(options.uploadRequired);\n            }\n\n            return [];\n        }\n\n        if (options.maxFiles && options.maxFiles < files.length) {\n            messages.push(options.tooMany);\n            return [];\n        }\n\n        return files;\n    }\n\n    function validateFile(file, messages, options)\n    {\n        if (options.extensions && options.extensions.length > 0) {\n            var found = false;\n            var filename = file.name.toLowerCase();\n\n            for (var index = 0; index < options.extensions.length; index++) {\n                var ext = options.extensions[index].toLowerCase();\n                if ((ext === '' && filename.indexOf('.') === -1) || (filename.substr(filename.length - options.extensions[index].length - 1) === ('.' + ext))) {\n                    found = true;\n                    break;\n                }\n            }\n\n            if (!found) {\n                messages.push(options.wrongExtension.replace(/\\{file\\}/g, file.name));\n            }\n        }\n\n        if (options.mimeTypes && options.mimeTypes.length > 0) {\n            if (!validateMimeType(options.mimeTypes, file.type)) {\n                messages.push(options.wrongMimeType.replace(/\\{file\\}/g, file.name));\n            }\n        }\n\n        if (options.maxSize && options.maxSize < file.size) {\n            messages.push(options.tooBig.replace(/\\{file\\}/g, file.name));\n        }\n\n        if (options.minSize && options.minSize > file.size) {\n            messages.push(options.tooSmall.replace(/\\{file\\}/g, file.name));\n        }\n    }\n\n    function validateMimeType(mimeTypes, fileType)\n    {\n        for (var i = 0, len = mimeTypes.length; i < len; i++) {\n            if (new RegExp(mimeTypes[i]).test(fileType)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function validateImageSize(file, image, messages, options)\n    {\n        if (options.minWidth && image.width < options.minWidth) {\n            messages.push(options.underWidth.replace(/\\{file\\}/g, file.name));\n        }\n\n        if (options.maxWidth && image.width > options.maxWidth) {\n            messages.push(options.overWidth.replace(/\\{file\\}/g, file.name));\n        }\n\n        if (options.minHeight && image.height < options.minHeight) {\n            messages.push(options.underHeight.replace(/\\{file\\}/g, file.name));\n        }\n\n        if (options.maxHeight && image.height > options.maxHeight) {\n            messages.push(options.overHeight.replace(/\\{file\\}/g, file.name));\n        }\n    }\n\n    /**\n     * PHP: `trim($path, ' /')`, JS: `yii.helpers.trim(path, {chars: ' /'})`\n     */\n    function trimString(value, options = {skipOnEmpty: true, chars: null})\n    {\n        if (options.skipOnEmpty !== false && pub.isEmpty(value)) {\n            return value;\n        }\n\n        value = new String(value);\n        if (options.chars || !String.prototype.trim) {\n            var chars = !options.chars\n                ? ' \\\\s\\xA0'\n                : options.chars.replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^\\:])/g, '\\$1');\n\n            return value.replace(new RegExp('^[' + chars + ']+|[' + chars + ']+$', 'g'), '');\n        }\n\n        return value.trim();\n    }\n\n    return pub;\n})(jQuery);\n"],"names":["yii","validation","$","pub","isEmpty","value","isArray","length","addMessage","messages","message","push","replace","required","options","valid","undefined","requiredValue","isString","String","strict","trimString","skipOnEmpty","trueValue","falseValue","string","is","min","tooShort","max","tooLong","notEqual","file","attribute","files","getUploadedFiles","each","i","validateFile","image","deferredList","FileReader","deferred","Deferred","validateImage","Image","fileReader","onload","minWidth","width","underWidth","name","maxWidth","overWidth","minHeight","height","underHeight","maxHeight","overHeight","validateImageSize","resolve","onerror","notImage","src","this","result","readAsDataURL","number","pattern","test","tooSmall","tooBig","range","allowArray","inArray","v","not","regularExpression","email","matches","exec","localPart","domain","enableIDN","punycode","toASCII","allowName","fullPattern","url","defaultScheme","trim","$form","$input","find","input","val","skipOnArray","Array","captcha","hash","data","hashKey","caseSensitive","toLowerCase","h","charCodeAt","compare","compareValue","compareAttribute","$target","compareAttributeName","type","parseFloat","operator","ip","negation","cidr","RegExp","ipParsePattern","subnet","indexOf","ipv6Pattern","ipv6","ipv6NotAllowed","ipv4Pattern","ipv4","ipv4NotAllowed","hasSubnet","noSubnet","File","fileInput","get","uploadRequired","maxFiles","tooMany","extensions","found","filename","index","ext","substr","wrongExtension","mimeTypes","fileType","len","validateMimeType","wrongMimeType","maxSize","size","minSize","arguments","chars","prototype","jQuery"],"sourceRoot":""}